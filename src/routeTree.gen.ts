/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as RedirectImport } from './routes/redirect'
import { Route as LoginImport } from './routes/login'
import { Route as DeferredImport } from './routes/deferred'
import { Route as PathlessLayoutImport } from './routes/_pathlessLayout'
import { Route as AuthedImport } from './routes/_authed'
import { Route as UsersRouteImport } from './routes/users.route'
import { Route as PostsRouteImport } from './routes/posts.route'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users.index'
import { Route as PostsIndexImport } from './routes/posts.index'
import { Route as UsersUserIdImport } from './routes/users.$userId'
import { Route as PostsPostIdImport } from './routes/posts.$postId'
import { Route as PathlessLayoutNestedLayoutImport } from './routes/_pathlessLayout/_nested-layout'
import { Route as AuthedAppIndexImport } from './routes/_authed/app/index'
import { Route as PostsPostIdDeepImport } from './routes/posts_.$postId.deep'
import { Route as PathlessLayoutNestedLayoutRouteBImport } from './routes/_pathlessLayout/_nested-layout/route-b'
import { Route as PathlessLayoutNestedLayoutRouteAImport } from './routes/_pathlessLayout/_nested-layout/route-a'
import { Route as AuthedAppAlertsImport } from './routes/_authed/app/alerts'
import { Route as AuthedAppSettingsRouteImport } from './routes/_authed/app/settings/route'
import { Route as AuthedAppDashboardRouteImport } from './routes/_authed/app/dashboard/route'
import { Route as AuthedAppBillingRouteImport } from './routes/_authed/app/billing/route'
import { Route as AuthedAppTestIndexImport } from './routes/_authed/app/test/index'
import { Route as AuthedAppSettingsIndexImport } from './routes/_authed/app/settings/index'
import { Route as AuthedAppDashboardIndexImport } from './routes/_authed/app/dashboard/index'
import { Route as AuthedAppBillingIndexImport } from './routes/_authed/app/billing/index'
import { Route as AuthedAppSettingsSecurityImport } from './routes/_authed/app/settings/security'
import { Route as AuthedAppSettingsProfileImport } from './routes/_authed/app/settings/profile'
import { Route as AuthedAppSettingsNotificationsImport } from './routes/_authed/app/settings/notifications'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const RedirectRoute = RedirectImport.update({
  id: '/redirect',
  path: '/redirect',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DeferredRoute = DeferredImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutRoute = PathlessLayoutImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const UsersRouteRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any)

const PostsRouteRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UsersRouteRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)

const UsersUserIdRoute = UsersUserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => UsersRouteRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRouteRoute,
} as any)

const PathlessLayoutNestedLayoutRoute = PathlessLayoutNestedLayoutImport.update(
  {
    id: '/_nested-layout',
    getParentRoute: () => PathlessLayoutRoute,
  } as any,
)

const AuthedAppIndexRoute = AuthedAppIndexImport.update({
  id: '/app/',
  path: '/app/',
  getParentRoute: () => AuthedRoute,
} as any)

const PostsPostIdDeepRoute = PostsPostIdDeepImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutNestedLayoutRouteBRoute =
  PathlessLayoutNestedLayoutRouteBImport.update({
    id: '/route-b',
    path: '/route-b',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

const PathlessLayoutNestedLayoutRouteARoute =
  PathlessLayoutNestedLayoutRouteAImport.update({
    id: '/route-a',
    path: '/route-a',
    getParentRoute: () => PathlessLayoutNestedLayoutRoute,
  } as any)

const AuthedAppAlertsRoute = AuthedAppAlertsImport.update({
  id: '/app/alerts',
  path: '/app/alerts',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppSettingsRouteRoute = AuthedAppSettingsRouteImport.update({
  id: '/app/settings',
  path: '/app/settings',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppDashboardRouteRoute = AuthedAppDashboardRouteImport.update({
  id: '/app/dashboard',
  path: '/app/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppBillingRouteRoute = AuthedAppBillingRouteImport.update({
  id: '/app/billing',
  path: '/app/billing',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppTestIndexRoute = AuthedAppTestIndexImport.update({
  id: '/app/test/',
  path: '/app/test/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAppSettingsIndexRoute = AuthedAppSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedAppSettingsRouteRoute,
} as any)

const AuthedAppDashboardIndexRoute = AuthedAppDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedAppDashboardRouteRoute,
} as any)

const AuthedAppBillingIndexRoute = AuthedAppBillingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedAppBillingRouteRoute,
} as any)

const AuthedAppSettingsSecurityRoute = AuthedAppSettingsSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => AuthedAppSettingsRouteRoute,
} as any)

const AuthedAppSettingsProfileRoute = AuthedAppSettingsProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedAppSettingsRouteRoute,
} as any)

const AuthedAppSettingsNotificationsRoute =
  AuthedAppSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthedAppSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/redirect': {
      id: '/redirect'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/_nested-layout': {
      id: '/_pathlessLayout/_nested-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutNestedLayoutImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof PostsRouteImport
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdImport
      parentRoute: typeof UsersRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof UsersRouteImport
    }
    '/_authed/app/billing': {
      id: '/_authed/app/billing'
      path: '/app/billing'
      fullPath: '/app/billing'
      preLoaderRoute: typeof AuthedAppBillingRouteImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/app/dashboard': {
      id: '/_authed/app/dashboard'
      path: '/app/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AuthedAppDashboardRouteImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/app/settings': {
      id: '/_authed/app/settings'
      path: '/app/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AuthedAppSettingsRouteImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/app/alerts': {
      id: '/_authed/app/alerts'
      path: '/app/alerts'
      fullPath: '/app/alerts'
      preLoaderRoute: typeof AuthedAppAlertsImport
      parentRoute: typeof AuthedImport
    }
    '/_pathlessLayout/_nested-layout/route-a': {
      id: '/_pathlessLayout/_nested-layout/route-a'
      path: '/route-a'
      fullPath: '/route-a'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteAImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/_pathlessLayout/_nested-layout/route-b': {
      id: '/_pathlessLayout/_nested-layout/route-b'
      path: '/route-b'
      fullPath: '/route-b'
      preLoaderRoute: typeof PathlessLayoutNestedLayoutRouteBImport
      parentRoute: typeof PathlessLayoutNestedLayoutImport
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof PostsPostIdDeepImport
      parentRoute: typeof rootRoute
    }
    '/_authed/app/': {
      id: '/_authed/app/'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AuthedAppIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/app/settings/notifications': {
      id: '/_authed/app/settings/notifications'
      path: '/notifications'
      fullPath: '/app/settings/notifications'
      preLoaderRoute: typeof AuthedAppSettingsNotificationsImport
      parentRoute: typeof AuthedAppSettingsRouteImport
    }
    '/_authed/app/settings/profile': {
      id: '/_authed/app/settings/profile'
      path: '/profile'
      fullPath: '/app/settings/profile'
      preLoaderRoute: typeof AuthedAppSettingsProfileImport
      parentRoute: typeof AuthedAppSettingsRouteImport
    }
    '/_authed/app/settings/security': {
      id: '/_authed/app/settings/security'
      path: '/security'
      fullPath: '/app/settings/security'
      preLoaderRoute: typeof AuthedAppSettingsSecurityImport
      parentRoute: typeof AuthedAppSettingsRouteImport
    }
    '/_authed/app/billing/': {
      id: '/_authed/app/billing/'
      path: '/'
      fullPath: '/app/billing/'
      preLoaderRoute: typeof AuthedAppBillingIndexImport
      parentRoute: typeof AuthedAppBillingRouteImport
    }
    '/_authed/app/dashboard/': {
      id: '/_authed/app/dashboard/'
      path: '/'
      fullPath: '/app/dashboard/'
      preLoaderRoute: typeof AuthedAppDashboardIndexImport
      parentRoute: typeof AuthedAppDashboardRouteImport
    }
    '/_authed/app/settings/': {
      id: '/_authed/app/settings/'
      path: '/'
      fullPath: '/app/settings/'
      preLoaderRoute: typeof AuthedAppSettingsIndexImport
      parentRoute: typeof AuthedAppSettingsRouteImport
    }
    '/_authed/app/test/': {
      id: '/_authed/app/test/'
      path: '/app/test'
      fullPath: '/app/test'
      preLoaderRoute: typeof AuthedAppTestIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface PostsRouteRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

interface UsersRouteRouteChildren {
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const UsersRouteRouteChildren: UsersRouteRouteChildren = {
  UsersUserIdRoute: UsersUserIdRoute,
  UsersIndexRoute: UsersIndexRoute,
}

const UsersRouteRouteWithChildren = UsersRouteRoute._addFileChildren(
  UsersRouteRouteChildren,
)

interface AuthedAppBillingRouteRouteChildren {
  AuthedAppBillingIndexRoute: typeof AuthedAppBillingIndexRoute
}

const AuthedAppBillingRouteRouteChildren: AuthedAppBillingRouteRouteChildren = {
  AuthedAppBillingIndexRoute: AuthedAppBillingIndexRoute,
}

const AuthedAppBillingRouteRouteWithChildren =
  AuthedAppBillingRouteRoute._addFileChildren(
    AuthedAppBillingRouteRouteChildren,
  )

interface AuthedAppDashboardRouteRouteChildren {
  AuthedAppDashboardIndexRoute: typeof AuthedAppDashboardIndexRoute
}

const AuthedAppDashboardRouteRouteChildren: AuthedAppDashboardRouteRouteChildren =
  {
    AuthedAppDashboardIndexRoute: AuthedAppDashboardIndexRoute,
  }

const AuthedAppDashboardRouteRouteWithChildren =
  AuthedAppDashboardRouteRoute._addFileChildren(
    AuthedAppDashboardRouteRouteChildren,
  )

interface AuthedAppSettingsRouteRouteChildren {
  AuthedAppSettingsNotificationsRoute: typeof AuthedAppSettingsNotificationsRoute
  AuthedAppSettingsProfileRoute: typeof AuthedAppSettingsProfileRoute
  AuthedAppSettingsSecurityRoute: typeof AuthedAppSettingsSecurityRoute
  AuthedAppSettingsIndexRoute: typeof AuthedAppSettingsIndexRoute
}

const AuthedAppSettingsRouteRouteChildren: AuthedAppSettingsRouteRouteChildren =
  {
    AuthedAppSettingsNotificationsRoute: AuthedAppSettingsNotificationsRoute,
    AuthedAppSettingsProfileRoute: AuthedAppSettingsProfileRoute,
    AuthedAppSettingsSecurityRoute: AuthedAppSettingsSecurityRoute,
    AuthedAppSettingsIndexRoute: AuthedAppSettingsIndexRoute,
  }

const AuthedAppSettingsRouteRouteWithChildren =
  AuthedAppSettingsRouteRoute._addFileChildren(
    AuthedAppSettingsRouteRouteChildren,
  )

interface AuthedRouteChildren {
  AuthedAppBillingRouteRoute: typeof AuthedAppBillingRouteRouteWithChildren
  AuthedAppDashboardRouteRoute: typeof AuthedAppDashboardRouteRouteWithChildren
  AuthedAppSettingsRouteRoute: typeof AuthedAppSettingsRouteRouteWithChildren
  AuthedAppAlertsRoute: typeof AuthedAppAlertsRoute
  AuthedAppIndexRoute: typeof AuthedAppIndexRoute
  AuthedAppTestIndexRoute: typeof AuthedAppTestIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedAppBillingRouteRoute: AuthedAppBillingRouteRouteWithChildren,
  AuthedAppDashboardRouteRoute: AuthedAppDashboardRouteRouteWithChildren,
  AuthedAppSettingsRouteRoute: AuthedAppSettingsRouteRouteWithChildren,
  AuthedAppAlertsRoute: AuthedAppAlertsRoute,
  AuthedAppIndexRoute: AuthedAppIndexRoute,
  AuthedAppTestIndexRoute: AuthedAppTestIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

interface PathlessLayoutNestedLayoutRouteChildren {
  PathlessLayoutNestedLayoutRouteARoute: typeof PathlessLayoutNestedLayoutRouteARoute
  PathlessLayoutNestedLayoutRouteBRoute: typeof PathlessLayoutNestedLayoutRouteBRoute
}

const PathlessLayoutNestedLayoutRouteChildren: PathlessLayoutNestedLayoutRouteChildren =
  {
    PathlessLayoutNestedLayoutRouteARoute:
      PathlessLayoutNestedLayoutRouteARoute,
    PathlessLayoutNestedLayoutRouteBRoute:
      PathlessLayoutNestedLayoutRouteBRoute,
  }

const PathlessLayoutNestedLayoutRouteWithChildren =
  PathlessLayoutNestedLayoutRoute._addFileChildren(
    PathlessLayoutNestedLayoutRouteChildren,
  )

interface PathlessLayoutRouteChildren {
  PathlessLayoutNestedLayoutRoute: typeof PathlessLayoutNestedLayoutRouteWithChildren
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutNestedLayoutRoute: PathlessLayoutNestedLayoutRouteWithChildren,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteRouteWithChildren
  '/users': typeof UsersRouteRouteWithChildren
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/register': typeof RegisterRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts/': typeof PostsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/app/billing': typeof AuthedAppBillingRouteRouteWithChildren
  '/app/dashboard': typeof AuthedAppDashboardRouteRouteWithChildren
  '/app/settings': typeof AuthedAppSettingsRouteRouteWithChildren
  '/app/alerts': typeof AuthedAppAlertsRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
  '/app': typeof AuthedAppIndexRoute
  '/app/settings/notifications': typeof AuthedAppSettingsNotificationsRoute
  '/app/settings/profile': typeof AuthedAppSettingsProfileRoute
  '/app/settings/security': typeof AuthedAppSettingsSecurityRoute
  '/app/billing/': typeof AuthedAppBillingIndexRoute
  '/app/dashboard/': typeof AuthedAppDashboardIndexRoute
  '/app/settings/': typeof AuthedAppSettingsIndexRoute
  '/app/test': typeof AuthedAppTestIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/register': typeof RegisterRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts': typeof PostsIndexRoute
  '/users': typeof UsersIndexRoute
  '/app/alerts': typeof AuthedAppAlertsRoute
  '/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
  '/app': typeof AuthedAppIndexRoute
  '/app/settings/notifications': typeof AuthedAppSettingsNotificationsRoute
  '/app/settings/profile': typeof AuthedAppSettingsProfileRoute
  '/app/settings/security': typeof AuthedAppSettingsSecurityRoute
  '/app/billing': typeof AuthedAppBillingIndexRoute
  '/app/dashboard': typeof AuthedAppDashboardIndexRoute
  '/app/settings': typeof AuthedAppSettingsIndexRoute
  '/app/test': typeof AuthedAppTestIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/posts': typeof PostsRouteRouteWithChildren
  '/users': typeof UsersRouteRouteWithChildren
  '/_authed': typeof AuthedRouteWithChildren
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/redirect': typeof RedirectRoute
  '/register': typeof RegisterRoute
  '/_pathlessLayout/_nested-layout': typeof PathlessLayoutNestedLayoutRouteWithChildren
  '/posts/$postId': typeof PostsPostIdRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/posts/': typeof PostsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/_authed/app/billing': typeof AuthedAppBillingRouteRouteWithChildren
  '/_authed/app/dashboard': typeof AuthedAppDashboardRouteRouteWithChildren
  '/_authed/app/settings': typeof AuthedAppSettingsRouteRouteWithChildren
  '/_authed/app/alerts': typeof AuthedAppAlertsRoute
  '/_pathlessLayout/_nested-layout/route-a': typeof PathlessLayoutNestedLayoutRouteARoute
  '/_pathlessLayout/_nested-layout/route-b': typeof PathlessLayoutNestedLayoutRouteBRoute
  '/posts_/$postId/deep': typeof PostsPostIdDeepRoute
  '/_authed/app/': typeof AuthedAppIndexRoute
  '/_authed/app/settings/notifications': typeof AuthedAppSettingsNotificationsRoute
  '/_authed/app/settings/profile': typeof AuthedAppSettingsProfileRoute
  '/_authed/app/settings/security': typeof AuthedAppSettingsSecurityRoute
  '/_authed/app/billing/': typeof AuthedAppBillingIndexRoute
  '/_authed/app/dashboard/': typeof AuthedAppDashboardIndexRoute
  '/_authed/app/settings/': typeof AuthedAppSettingsIndexRoute
  '/_authed/app/test/': typeof AuthedAppTestIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/posts'
    | '/users'
    | ''
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/register'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts/'
    | '/users/'
    | '/app/billing'
    | '/app/dashboard'
    | '/app/settings'
    | '/app/alerts'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
    | '/app'
    | '/app/settings/notifications'
    | '/app/settings/profile'
    | '/app/settings/security'
    | '/app/billing/'
    | '/app/dashboard/'
    | '/app/settings/'
    | '/app/test'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/register'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts'
    | '/users'
    | '/app/alerts'
    | '/route-a'
    | '/route-b'
    | '/posts/$postId/deep'
    | '/app'
    | '/app/settings/notifications'
    | '/app/settings/profile'
    | '/app/settings/security'
    | '/app/billing'
    | '/app/dashboard'
    | '/app/settings'
    | '/app/test'
  id:
    | '__root__'
    | '/'
    | '/posts'
    | '/users'
    | '/_authed'
    | '/_pathlessLayout'
    | '/deferred'
    | '/login'
    | '/redirect'
    | '/register'
    | '/_pathlessLayout/_nested-layout'
    | '/posts/$postId'
    | '/users/$userId'
    | '/posts/'
    | '/users/'
    | '/_authed/app/billing'
    | '/_authed/app/dashboard'
    | '/_authed/app/settings'
    | '/_authed/app/alerts'
    | '/_pathlessLayout/_nested-layout/route-a'
    | '/_pathlessLayout/_nested-layout/route-b'
    | '/posts_/$postId/deep'
    | '/_authed/app/'
    | '/_authed/app/settings/notifications'
    | '/_authed/app/settings/profile'
    | '/_authed/app/settings/security'
    | '/_authed/app/billing/'
    | '/_authed/app/dashboard/'
    | '/_authed/app/settings/'
    | '/_authed/app/test/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  UsersRouteRoute: typeof UsersRouteRouteWithChildren
  AuthedRoute: typeof AuthedRouteWithChildren
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  LoginRoute: typeof LoginRoute
  RedirectRoute: typeof RedirectRoute
  RegisterRoute: typeof RegisterRoute
  PostsPostIdDeepRoute: typeof PostsPostIdDeepRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  UsersRouteRoute: UsersRouteRouteWithChildren,
  AuthedRoute: AuthedRouteWithChildren,
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
  DeferredRoute: DeferredRoute,
  LoginRoute: LoginRoute,
  RedirectRoute: RedirectRoute,
  RegisterRoute: RegisterRoute,
  PostsPostIdDeepRoute: PostsPostIdDeepRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/posts",
        "/users",
        "/_authed",
        "/_pathlessLayout",
        "/deferred",
        "/login",
        "/redirect",
        "/register",
        "/posts_/$postId/deep"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/posts": {
      "filePath": "posts.route.tsx",
      "children": [
        "/posts/$postId",
        "/posts/"
      ]
    },
    "/users": {
      "filePath": "users.route.tsx",
      "children": [
        "/users/$userId",
        "/users/"
      ]
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/app/billing",
        "/_authed/app/dashboard",
        "/_authed/app/settings",
        "/_authed/app/alerts",
        "/_authed/app/",
        "/_authed/app/test/"
      ]
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout.tsx",
      "children": [
        "/_pathlessLayout/_nested-layout"
      ]
    },
    "/deferred": {
      "filePath": "deferred.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/redirect": {
      "filePath": "redirect.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_pathlessLayout/_nested-layout": {
      "filePath": "_pathlessLayout/_nested-layout.tsx",
      "parent": "/_pathlessLayout",
      "children": [
        "/_pathlessLayout/_nested-layout/route-a",
        "/_pathlessLayout/_nested-layout/route-b"
      ]
    },
    "/posts/$postId": {
      "filePath": "posts.$postId.tsx",
      "parent": "/posts"
    },
    "/users/$userId": {
      "filePath": "users.$userId.tsx",
      "parent": "/users"
    },
    "/posts/": {
      "filePath": "posts.index.tsx",
      "parent": "/posts"
    },
    "/users/": {
      "filePath": "users.index.tsx",
      "parent": "/users"
    },
    "/_authed/app/billing": {
      "filePath": "_authed/app/billing/route.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/app/billing/"
      ]
    },
    "/_authed/app/dashboard": {
      "filePath": "_authed/app/dashboard/route.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/app/dashboard/"
      ]
    },
    "/_authed/app/settings": {
      "filePath": "_authed/app/settings/route.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/app/settings/notifications",
        "/_authed/app/settings/profile",
        "/_authed/app/settings/security",
        "/_authed/app/settings/"
      ]
    },
    "/_authed/app/alerts": {
      "filePath": "_authed/app/alerts.tsx",
      "parent": "/_authed"
    },
    "/_pathlessLayout/_nested-layout/route-a": {
      "filePath": "_pathlessLayout/_nested-layout/route-a.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/_pathlessLayout/_nested-layout/route-b": {
      "filePath": "_pathlessLayout/_nested-layout/route-b.tsx",
      "parent": "/_pathlessLayout/_nested-layout"
    },
    "/posts_/$postId/deep": {
      "filePath": "posts_.$postId.deep.tsx"
    },
    "/_authed/app/": {
      "filePath": "_authed/app/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/app/settings/notifications": {
      "filePath": "_authed/app/settings/notifications.tsx",
      "parent": "/_authed/app/settings"
    },
    "/_authed/app/settings/profile": {
      "filePath": "_authed/app/settings/profile.tsx",
      "parent": "/_authed/app/settings"
    },
    "/_authed/app/settings/security": {
      "filePath": "_authed/app/settings/security.tsx",
      "parent": "/_authed/app/settings"
    },
    "/_authed/app/billing/": {
      "filePath": "_authed/app/billing/index.tsx",
      "parent": "/_authed/app/billing"
    },
    "/_authed/app/dashboard/": {
      "filePath": "_authed/app/dashboard/index.tsx",
      "parent": "/_authed/app/dashboard"
    },
    "/_authed/app/settings/": {
      "filePath": "_authed/app/settings/index.tsx",
      "parent": "/_authed/app/settings"
    },
    "/_authed/app/test/": {
      "filePath": "_authed/app/test/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
